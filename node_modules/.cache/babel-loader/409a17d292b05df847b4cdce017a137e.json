{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rock/Development/code/Phase2/phase-2-hooks-code-challenge-bank-of-flatiron-ADMBonny/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\nimport Search from \"./Search\";\n\nfunction TransactionsList() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => setTransactions(data)).catch(error => console.error(\"Error fetching transactions\", error));\n  }, []);\n\n  const addTransaction = newTransaction => {\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => response.json()).then(data => setTransactions([...transactions, data])).catch(error => console.error(\"Error adding transaction to backend\", error));\n  };\n\n  const filterTransactions = searchParams => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => {\n      const filteredTransactions = data.filter(transaction => {\n        const descriptionMatch = transaction.description.toLowerCase().includes(searchParams.description.toLowerCase());\n        const categoryMatch = transaction.category.toLowerCase().includes(searchParams.category.toLowerCase());\n        const dateMatch = transaction.date.toLowerCase().includes(searchParams.date.toLowerCase());\n        const amountMatch = transaction.amount.toString().toLowerCase().includes(searchParams.amount.toLowerCase());\n        return descriptionMatch && categoryMatch && dateMatch && amountMatch;\n      });\n      setTransactions(filteredTransactions);\n    }).catch(error => console.error(\"Error fetching transactions for filtering\", error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      filterTransactions: filterTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui celled striped padded table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), transactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          transaction: transaction\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/rock/Development/code/Phase2/phase-2-hooks-code-challenge-bank-of-flatiron-ADMBonny/src/components/TransactionsList.js"],"names":["React","useEffect","useState","Transaction","Search","TransactionsList","transactions","setTransactions","fetch","then","response","json","data","catch","error","console","addTransaction","newTransaction","method","headers","body","JSON","stringify","filterTransactions","searchParams","filteredTransactions","filter","transaction","descriptionMatch","description","toLowerCase","includes","categoryMatch","category","dateMatch","date","amountMatch","amount","toString","map","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\nimport Search from \"./Search\";\n\nfunction TransactionsList() {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    \n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching transactions\", error));\n  }, []);\n\n  const addTransaction = (newTransaction) => {\n    \n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTransaction),\n    })\n      .then((response) => response.json())\n      .then((data) => setTransactions([...transactions, data]))\n      .catch((error) =>\n        console.error(\"Error adding transaction to backend\", error)\n      );\n  };\n\n  const filterTransactions = (searchParams) => {\n   \n    fetch(\"http://localhost:8001/transactions\") \n      .then((response) => response.json())\n      .then((data) => {\n        const filteredTransactions = data.filter((transaction) => {\n          const descriptionMatch = transaction.description\n            .toLowerCase()\n            .includes(searchParams.description.toLowerCase());\n\n          const categoryMatch = transaction.category\n            .toLowerCase()\n            .includes(searchParams.category.toLowerCase());\n\n          const dateMatch = transaction.date\n            .toLowerCase()\n            .includes(searchParams.date.toLowerCase());\n\n          const amountMatch = transaction.amount\n            .toString()\n            .toLowerCase()\n            .includes(searchParams.amount.toLowerCase());\n\n          return (\n            descriptionMatch && categoryMatch && dateMatch && amountMatch\n          );\n        });\n\n        setTransactions(filteredTransactions);\n      })\n      .catch((error) =>\n        console.error(\"Error fetching transactions for filtering\", error)\n      );\n  };\n\n  return (\n    <div>\n      \n      <Search filterTransactions={filterTransactions} />\n\n      <table className=\"ui celled striped padded table\">\n        <tbody>\n          <tr>\n            <th>\n              <h3 className=\"ui center aligned header\">Date</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Description</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Category</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Amount</h3>\n            </th>\n          </tr>\n          {transactions.map((transaction) => (\n            <Transaction key={transaction.id} transaction={transaction} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionsList;"]},"metadata":{},"sourceType":"module"}