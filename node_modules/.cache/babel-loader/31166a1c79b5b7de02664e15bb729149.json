{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rock/Development/code/Phase2/phase-2-hooks-code-challenge-bank-of-flatiron-ADMBonny/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Transaction from \"./Transaction\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction TransactionsList() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [originalTransactions, setOriginalTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sortKey, setSortKey] = useState('date');\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  const fetchTransactions = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8001/transactions\");\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setTransactions(data);\n      setOriginalTransactions(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addTransaction = async newTransaction => {\n    try {\n      const response = await fetch(\"http://localhost:8001/transactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTransaction)\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const addedTransaction = await response.json();\n      setTransactions([...transactions, addedTransaction]);\n      setOriginalTransactions([...originalTransactions, addedTransaction]);\n    } catch (error) {\n      console.error(\"Error adding transaction\", error);\n    }\n  };\n\n  const filterTransactions = searchParams => {\n    const filteredTransactions = originalTransactions.filter(transaction => {\n      return Object.keys(searchParams).every(key => {\n        if (!searchParams[key]) return true; // ignore empty search params\n\n        return transaction[key].toString().toLowerCase().includes(searchParams[key].toLowerCase());\n      });\n    });\n    setTransactions(filteredTransactions);\n  };\n\n  const sortTransactions = useCallback(() => {\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      if (a[sortKey] < b[sortKey]) return -1;\n      if (a[sortKey] > b[sortKey]) return 1;\n      return 0;\n    });\n    setTransactions(sortedTransactions);\n  });\n  [transactions, sortKey];\n\n  const deleteTransaction = async id => {\n    try {\n      const response = await fetch(`http://localhost:8001/transactions/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      setTransactions(transactions.filter(transaction => transaction.id !== id));\n      setOriginalTransactions(originalTransactions.filter(transaction => transaction.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting transaction\", error);\n    }\n  };\n\n  useEffect(() => {\n    sortTransactions();\n  }, [sortKey, sortTransactions]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      filterTransactions: filterTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      addTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortKey('category'),\n        children: \"Sort by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortKey('description'),\n        children: \"Sort by Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui celled striped padded table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), transactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          transaction: transaction,\n          onDelete: deleteTransaction\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"jzJ4nm2xAcrrPItYaZYkbN//qfE=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/rock/Development/code/Phase2/phase-2-hooks-code-challenge-bank-of-flatiron-ADMBonny/src/components/TransactionsList.js"],"names":["React","useEffect","useState","useCallback","Transaction","Search","AddTransactionForm","TransactionsList","transactions","setTransactions","originalTransactions","setOriginalTransactions","loading","setLoading","error","setError","sortKey","setSortKey","fetchTransactions","response","fetch","ok","Error","data","json","message","addTransaction","newTransaction","method","headers","body","JSON","stringify","addedTransaction","console","filterTransactions","searchParams","filteredTransactions","filter","transaction","Object","keys","every","key","toString","toLowerCase","includes","sortTransactions","sortedTransactions","sort","a","b","deleteTransaction","id","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Transaction from \"./Transaction\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction TransactionsList() {\n  const [transactions, setTransactions] = useState([]);\n  const [originalTransactions, setOriginalTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sortKey, setSortKey] = useState('date');\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  const fetchTransactions = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8001/transactions\");\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setTransactions(data);\n      setOriginalTransactions(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addTransaction = async (newTransaction) => {\n    try {\n      const response = await fetch(\"http://localhost:8001/transactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newTransaction),\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const addedTransaction = await response.json();\n      setTransactions([...transactions, addedTransaction]);\n      setOriginalTransactions([...originalTransactions, addedTransaction]);\n    } catch (error) {\n      console.error(\"Error adding transaction\", error);\n    }\n  };\n\n  const filterTransactions = (searchParams) => {\n    const filteredTransactions = originalTransactions.filter((transaction) => {\n      return Object.keys(searchParams).every((key) => {\n        if (!searchParams[key]) return true; // ignore empty search params\n        return transaction[key].toString().toLowerCase().includes(searchParams[key].toLowerCase());\n      });\n    });\n    setTransactions(filteredTransactions);\n  };\n\n  const sortTransactions =  useCallback(() => {\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      if (a[sortKey] < b[sortKey]) return -1;\n      if (a[sortKey] > b[sortKey]) return 1;\n      return 0;\n    \n    });\n    setTransactions(sortedTransactions);\n  }); [transactions, sortKey];\n\n  const deleteTransaction = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:8001/transactions/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      setTransactions(transactions.filter((transaction) => transaction.id !== id));\n      setOriginalTransactions(originalTransactions.filter((transaction) => transaction.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting transaction\", error);\n    }\n  };\n  useEffect(() => {\n    sortTransactions();\n  }, [sortKey, sortTransactions]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <Search filterTransactions={filterTransactions} />\n      <AddTransactionForm addTransaction={addTransaction} />\n      <div>\n        <button onClick={() => setSortKey('category')}>Sort by Category</button>\n        <button onClick={() => setSortKey('description')}>Sort by Description</button>\n      </div>\n      <table className=\"ui celled striped padded table\">\n        <tbody>\n          <tr>\n            <th>\n              <h3 className=\"ui center aligned header\">Date</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Description</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Category</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Amount</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Actions</h3>\n            </th>\n          </tr>\n          {transactions.map((transaction) => (\n            <Transaction key={transaction.id} transaction={transaction} onDelete={deleteTransaction} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionsList;"]},"metadata":{},"sourceType":"module"}