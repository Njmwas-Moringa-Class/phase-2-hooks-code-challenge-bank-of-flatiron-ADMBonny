{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rock/Development/code/Phase2/phase-2-hooks-code-challenge-bank-of-flatiron-ADMBonny/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm({\n  addTransaction\n}) {\n  _s();\n\n  const [transactionData, setTransactionData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTransactionData(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (transactionData.date && transactionData.description && transactionData.category && transactionData.amount) {\n      addTransaction(transactionData);\n      setTransactionData({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: transactionData.date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: transactionData.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: transactionData.category,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          value: transactionData.amount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"EATCy1drR/Mj4zvFCNqQPAnMsoE=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/rock/Development/code/Phase2/phase-2-hooks-code-challenge-bank-of-flatiron-ADMBonny/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","addTransaction","transactionData","setTransactionData","date","description","category","amount","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAgD;AAAA;;AAC9C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC;AACrDK,IAAAA,IAAI,EAAE,EAD+C;AAErDC,IAAAA,WAAW,EAAE,EAFwC;AAGrDC,IAAAA,QAAQ,EAAE,EAH2C;AAIrDC,IAAAA,MAAM,EAAE;AAJ6C,GAAD,CAAtD;;AAOA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,kBAAkB,CAAEU,QAAD,KAAe,EAChC,GAAGA,QAD6B;AAEhC,OAACH,IAAD,GAAQC;AAFwB,KAAf,CAAD,CAAlB;AAID,GAND;;AAQA,QAAMG,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;;AAEA,QACEb,eAAe,CAACE,IAAhB,IACAF,eAAe,CAACG,WADhB,IAEAH,eAAe,CAACI,QAFhB,IAGAJ,eAAe,CAACK,MAJlB,EAKE;AAEAN,MAAAA,cAAc,CAACC,eAAD,CAAd;AAGAC,MAAAA,kBAAkB,CAAC;AACjBC,QAAAA,IAAI,EAAE,EADW;AAEjBC,QAAAA,WAAW,EAAE,EAFI;AAGjBC,QAAAA,QAAQ,EAAE,EAHO;AAIjBC,QAAAA,MAAM,EAAE;AAJS,OAAD,CAAlB;AAMD;AACF,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEO,YAApC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEZ,eAAe,CAACE,IAHzB;AAIE,UAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,WAAW,EAAC,aAHd;AAIE,UAAA,KAAK,EAAEN,eAAe,CAACG,WAJzB;AAKE,UAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,KAAK,EAAEN,eAAe,CAACI,QAJzB;AAKE,UAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,gBAdF,eAqBE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,QAHd;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,KAAK,EAAEN,eAAe,CAACK,MALzB;AAME,UAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA+BE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA7EQR,kB;;KAAAA,kB;AA+ET,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTransactionForm({ addTransaction }) {\n  const [transactionData, setTransactionData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setTransactionData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (\n      transactionData.date &&\n      transactionData.description &&\n      transactionData.category &&\n      transactionData.amount\n    ) {\n      \n      addTransaction(transactionData);\n\n      \n      setTransactionData({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: 0,\n      });\n    }\n  };\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={transactionData.date}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={transactionData.description}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            value={transactionData.category}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            value={transactionData.amount}\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}